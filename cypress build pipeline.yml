trigger: none
pr: none

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Test
  displayName: 'Run Cypress Tests'
  jobs:
  - job: CypressTestExecution
    displayName: 'Execute Cypress UI Tests'
    steps:

    - task: NodeTool@0
      displayName: 'Install Node.js'
      inputs:
        versionSpec: '20.x'

    - script: npm ci
      displayName: 'Install npm dependencies'

    # This is the CORRECT way to structure the script block.
    # The displayName is a property of the task, not inside the script.
    - script: |
        echo "Starting Cypress tests..."
        npm run cy:run
        echo "Cypress command finished. Waiting 15 seconds for report plugin to complete."
        sleep 15
      displayName: 'Run Cypress & Wait for Report Plugin'
      
     # --- THIS IS THE CRITICAL NEW DEBUGGING STEP ---
    - script: |
        echo "Cypress run finished. Now checking for the existence of the results folder..."
        echo "Current directory: $(pwd)"
        echo "Listing all contents of the project directory:"
        ls -lR
        
        echo "---"
        echo "Specifically checking for the 'cypress/results' directory..."
        if [ -d "$(System.DefaultWorkingDirectory)/cypress/results" ]; then
          echo "✅ SUCCESS: The 'cypress/results' directory was found!"
        else
          echo "❌ FAILURE: The 'cypress/results' directory DOES NOT EXIST. This is the root cause of the error."
        fi
      displayName: 'Debug: Check for Report Directory'
      condition: always() # Run this step even if the previous one fails
      
    - task: PublishTestResults@2
      displayName: 'Publish JUnit XML Results'
      condition: succeededOrFailed()
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/results-*.xml'
        searchFolder: '$(System.DefaultWorkingDirectory)/cypress/results/junit' # Correct path
        mergeTestResults: true

    - task: PublishPipelineArtifact@1
      displayName: 'Publish All Cypress Artifacts'
      condition: always()
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/cypress/results' # Correct path
        artifactName: 'CypressExecutionArtifacts'