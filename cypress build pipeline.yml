trigger: none
pr: none

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Test
  displayName: 'Run Cypress Tests'
  jobs:
  - job: CypressTestExecution
    displayName: 'Execute Cypress UI Tests'
    steps:

    - task: NodeTool@0
      displayName: 'Install Node.js'
      inputs:
        versionSpec: '20.x'

    - script: npm ci
      displayName: 'Install npm dependencies'

    # --- THIS IS THE CRITICAL NEW DIAGNOSTIC STEP ---
    - script: |
        echo "========================================================"
        echo "=== DIAGNOSTIC CHECK: Displaying config files        ==="
        echo "========================================================"
        echo ""
        echo "Listing all files in the root directory..."
        ls -la
        
        echo ""
        echo "---"
        echo "Displaying the contents of cypress.config.js that this pipeline WILL USE:"
        echo "---"
        cat cypress.config.js
        echo ""
        echo "---"
        echo "Diagnostic check complete. Proceeding to test run..."
        echo "========================================================"
      displayName: 'Pre-Run Diagnostic Check'


    # This is the CORRECT way to structure the script block.
    # The displayName is a property of the task, not inside the script.
    - script: |
        echo "Starting Cypress tests..."
        npm run cy:run
        echo "Cypress command finished. Waiting 15 seconds for report plugin to complete."
        sleep 15
      displayName: 'Run Cypress & Wait for Report Plugin'
        # --- THIS IS THE NEW, MANUAL, RELIABLE MERGE SCRIPT ---
        
    - script: |
        echo "Searching for JSON report files in cypress/results/mochawesome/"
        # This command checks if any .json files exist in the directory
        if [ -n "$(find cypress/results/mochawesome -name '*.json' -print -quit)" ]; then
          echo "✅ JSON files found. Starting merge process."
          # Manually run the merge command
          npx mochawesome-merge cypress/results/mochawesome/*.json > cypress/results/mochawesome-report.json
          # Manually run the HTML generator command
          npx marge cypress/results/mochawesome-report.json --reportDir cypress/results --inline
          echo "✅ HTML Report generated successfully."
        else
          echo "❌ CRITICAL ERROR: No JSON files were generated by the test run. Cannot create HTML report."
          # We fail the pipeline here because this is a critical failure of the test process
          exit 1
        fi
      displayName: 'Manually Merge Reports'
      condition: always()

     # --- THIS IS THE CRITICAL NEW DEBUGGING STEP ---
    - script: |
        echo "Cypress run finished. Now checking for the existence of the results folder..."
        echo "Current directory: $(pwd)"
        echo "Listing all contents of the project directory:"
        ls -lR
        
        echo "---"
        echo "Specifically checking for the 'cypress/results' directory..."
        if [ -d "$(System.DefaultWorkingDirectory)/cypress/results" ]; then
          echo "✅ SUCCESS: The 'cypress/results' directory was found!"
        else
          echo "❌ FAILURE: The 'cypress/results' directory DOES NOT EXIST. This is the root cause of the error."
        fi
      displayName: 'Debug: Check for Report Directory'
      condition: always() # Run this step even if the previous one fails
      
    - task: PublishTestResults@2
      displayName: 'Publish JUnit XML Results'
      condition: succeededOrFailed()
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/results-*.xml'
        searchFolder: '$(System.DefaultWorkingDirectory)/cypress/results/junit' # Correct path
        mergeTestResults: true

    - task: PublishPipelineArtifact@1
      displayName: 'Publish All Cypress Artifacts'
      condition: always()
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/cypress/results' # Correct path
        artifactName: 'CypressExecutionArtifacts'