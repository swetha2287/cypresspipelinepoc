trigger: none
pr: none

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Test
  displayName: 'Run Cypress Tests'
  jobs:
  - job: CypressTestExecution
    displayName: 'Execute Cypress UI Tests'
    steps:

    # 1. Install Node.js
    - task: NodeTool@0
      displayName: 'Install Node.js'
      inputs:
        versionSpec: '20.x'

    # 2. Cache npm packages
    - task: Cache@2
      displayName: 'Cache node_modules'
      inputs:
        key: 'npm | $(Agent.OS) | package-lock.json'
        path: '$(npm_config_cache)'
        restoreKeys: |
          npm | $(Agent.OS)

    # 3. Install dependencies
    - script: |
        set -x
        echo "##[section]Installing npm dependencies"
        npm ci
      displayName: 'Install npm dependencies'
      condition: always()

    # 4. Run Cypress Tests
    - script: |
        set -x
        echo "##[section]Running Cypress Tests"
        npm run cy:run
      displayName: 'Run Cypress End-to-End Tests'
      continueOnError: true   # Don't stop pipeline if tests fail

    # 5. Debug JSON reports
    - script: |
        set -x
        echo "##[section]Debug: Listing mochawesome JSON reports"
        if [ -d "cypress/reports/html/.jsons" ]; then
          echo "✅ JSON report directory found."
          ls -lh cypress/reports/html/.jsons/
          echo "=== Preview of first JSON report ==="
          head -40 cypress/reports/html/.jsons/*.json || true
        else
          echo "❌ JSON report directory NOT found!"
        fi
      displayName: 'Debug JSON Reports'
      condition: always()

    # 6. Merge JSON & generate HTML
    - script: |
        set -x
        echo "##[section]Merging JSON & Generating HTML Report"
        mkdir -p cypress/reports/html
        if compgen -G "cypress/reports/html/.jsons/*.json" > /dev/null; then
          npx mochawesome-merge cypress/reports/html/.jsons/*.json > cypress/reports/html/mochawesome.json
          npx marge cypress/reports/html/mochawesome.json \
            --reportDir cypress/reports/html \
            --reportFilename index \
            --inlineAssets true
          echo "=== Report generated ==="
          ls -lh cypress/reports/html/index.html
          head -40 cypress/reports/html/index.html || true
        else
          echo "❌ No JSON files found, skipping HTML generation."
        fi
      displayName: 'Merge & Generate HTML Report'
      condition: always()

    # 7. Publish Test Results (JUnit)
    - task: PublishTestResults@2
      displayName: 'Publish JUnit Test Results'
      condition: always()
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/results-*.xml'
        searchFolder: '$(System.DefaultWorkingDirectory)/cypress/results/junit'
        mergeTestResults: true
        failTaskOnFailedTests: false
        testRunTitle: 'Cypress Test Results'

    # 8. Publish HTML Report Artifact
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Cypress HTML Report'
      condition: always()
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/cypress/reports/html/'
        artifactName: 'CypressHTMLTestReports'
    
